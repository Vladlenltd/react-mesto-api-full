{"ast":null,"code":"class Auth {\n  constructor(options) {\n    this._baseUrl = options.baseUrl; // this._headers = options.headers;\n  }\n\n  _checkServerStatus(res) {\n    if (res.ok) {\n      return res.json();\n    } else {\n      return Promise.reject(`Ошибка: ${res.status}`);\n    }\n  }\n\n  registration(password, email) {\n    return fetch(`${this._baseUrl}/signup`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        password: password,\n        email: email\n      })\n    }).then(this._checkServerStatus);\n  }\n\n  authorization(password, email) {\n    return fetch(`${this._baseUrl}/signin`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        password,\n        email\n      })\n    }).then(this._checkServerStatus);\n  }\n\n  checkTokenValidity(token) {\n    return fetch(`${this._baseUrl}/users/me`, {\n      method: \"GET\",\n      headers: { ...this._headers,\n        Authorization: `Bearer ${token}`\n      }\n    }).then(this._checkServerStatus);\n  }\n\n}\n\nexport const auth = new Auth({\n  baseUrl: 'https://auth.nomoreparties.co',\n  headers: {\n    \"Content-Type\": \"application/json\"\n  }\n});","map":{"version":3,"names":["Auth","constructor","options","_baseUrl","baseUrl","_checkServerStatus","res","ok","json","Promise","reject","status","registration","password","email","fetch","method","headers","body","JSON","stringify","then","authorization","checkTokenValidity","token","_headers","Authorization","auth"],"sources":["/Users/Vlad/dev/react-mesto-auth/src/utils/Auth.js"],"sourcesContent":["class Auth {\n    constructor(options) {\n        this._baseUrl = options.baseUrl;\n        // this._headers = options.headers;\n    }\n    _checkServerStatus(res) {\n        if (res.ok) {\n            return res.json()\n        }else {\n            return Promise.reject(`Ошибка: ${res.status}`);\n        }\n    }\n    registration(password, email) {\n        return fetch(`${this._baseUrl}/signup`, {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n                password: password,\n                email: email,\n            })\n        }).then(this._checkServerStatus)\n    }\n    authorization(password, email) {\n        return fetch(`${this._baseUrl}/signin`, {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n                password,\n                email\n            })\n        }).then(this._checkServerStatus)\n    }\n    checkTokenValidity(token) {\n        return fetch(`${this._baseUrl}/users/me`, {\n            method: \"GET\",\n            headers: {\n                ...this._headers, Authorization: `Bearer ${token}`\n            }\n        }).then(this._checkServerStatus)\n    }\n}\nexport const auth = new Auth({\n    baseUrl: 'https://auth.nomoreparties.co',\n    headers: {\n        \"Content-Type\": \"application/json\"\n    }\n})"],"mappings":"AAAA,MAAMA,IAAN,CAAW;EACPC,WAAW,CAACC,OAAD,EAAU;IACjB,KAAKC,QAAL,GAAgBD,OAAO,CAACE,OAAxB,CADiB,CAEjB;EACH;;EACDC,kBAAkB,CAACC,GAAD,EAAM;IACpB,IAAIA,GAAG,CAACC,EAAR,EAAY;MACR,OAAOD,GAAG,CAACE,IAAJ,EAAP;IACH,CAFD,MAEM;MACF,OAAOC,OAAO,CAACC,MAAR,CAAgB,WAAUJ,GAAG,CAACK,MAAO,EAArC,CAAP;IACH;EACJ;;EACDC,YAAY,CAACC,QAAD,EAAWC,KAAX,EAAkB;IAC1B,OAAOC,KAAK,CAAE,GAAE,KAAKZ,QAAS,SAAlB,EAA4B;MACpCa,MAAM,EAAE,MAD4B;MAEpCC,OAAO,EAAE;QACL,gBAAgB;MADX,CAF2B;MAKpCC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;QACjBP,QAAQ,EAAEA,QADO;QAEjBC,KAAK,EAAEA;MAFU,CAAf;IAL8B,CAA5B,CAAL,CASJO,IATI,CASC,KAAKhB,kBATN,CAAP;EAUH;;EACDiB,aAAa,CAACT,QAAD,EAAWC,KAAX,EAAkB;IAC3B,OAAOC,KAAK,CAAE,GAAE,KAAKZ,QAAS,SAAlB,EAA4B;MACpCa,MAAM,EAAE,MAD4B;MAEpCC,OAAO,EAAE;QACL,gBAAgB;MADX,CAF2B;MAKpCC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;QACjBP,QADiB;QAEjBC;MAFiB,CAAf;IAL8B,CAA5B,CAAL,CASJO,IATI,CASC,KAAKhB,kBATN,CAAP;EAUH;;EACDkB,kBAAkB,CAACC,KAAD,EAAQ;IACtB,OAAOT,KAAK,CAAE,GAAE,KAAKZ,QAAS,WAAlB,EAA8B;MACtCa,MAAM,EAAE,KAD8B;MAEtCC,OAAO,EAAE,EACL,GAAG,KAAKQ,QADH;QACaC,aAAa,EAAG,UAASF,KAAM;MAD5C;IAF6B,CAA9B,CAAL,CAKJH,IALI,CAKC,KAAKhB,kBALN,CAAP;EAMH;;AA3CM;;AA6CX,OAAO,MAAMsB,IAAI,GAAG,IAAI3B,IAAJ,CAAS;EACzBI,OAAO,EAAE,+BADgB;EAEzBa,OAAO,EAAE;IACL,gBAAgB;EADX;AAFgB,CAAT,CAAb"},"metadata":{},"sourceType":"module"}