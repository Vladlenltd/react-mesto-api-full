{"ast":null,"code":"// class Auth {\n//     constructor(options) {\n//         this._baseUrl = options.baseUrl;\n//         this._headers = options.headers;\n//     }\n//     _checkServerStatus(res) {\n//         if (res.ok) {\n//             return res.json()\n//         }else {\n//             return Promise.reject(`Ошибка: ${res.status}`);\n//         }\n//     }\n//     registration(password, email) {\n//         return fetch(`${this._baseUrl}/signup`, {\n//             method: \"POST\",\n//             headers: this._headers,\n//             body: JSON.stringify({\n//                 password: password,\n//                 email: email,\n//             })\n//         }).then(this._checkServerStatus)\n//     }\n//     authorization(password, email) {\n//         return fetch(`${this._baseUrl}/signin`, {\n//             method: \"POST\",\n//             headers: this._headers,\n//             body: JSON.stringify({\n//                 password,\n//                 email\n//             })\n//         }).then(this._checkServerStatus)\n//     }\n//     checkTokenValidity(token) {\n//         return fetch(`${this._baseUrl}/users/me`, {\n//             method: \"GET\",\n//             headers: {\n//                 ...this._headers, Authorization: `Bearer ${token}`\n//             }\n//         }).then(this._checkServerStatus)\n//     }\n// }\n// export const auth = new Auth({\n//     baseUrl: 'https://auth.nomoreparties.co',\n//     headers: {\n//         \"Content-Type\": \"application/json\"\n//     }\n// })\nexport const BASE_URL = 'https://auth.nomoreparties.co';\n\nconst checkResponse = res => {\n  return res.ok ? res.json() : Promise.reject(`Ошибка: ${res.status}`);\n};\n\nexport const registration = (password, email) => {\n  return fetch(`${BASE_URL}/signup`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      password: password,\n      email: email\n    })\n  }).then(checkResponse);\n};\nexport const authorization = (email, password) => {\n  return fetch(`${BASE_URL}/signin`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      email: email,\n      password: password\n    })\n  }).then(checkResponse);\n};\nexport const checkTokenValidity = token => {\n  return fetch(`${BASE_URL}/users/me`, {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${token}`\n    }\n  }).then(checkResponse);\n};","map":{"version":3,"names":["BASE_URL","checkResponse","res","ok","json","Promise","reject","status","registration","password","email","fetch","method","headers","body","JSON","stringify","then","authorization","checkTokenValidity","token","Authorization"],"sources":["/Users/Vlad/dev/react-mesto-auth/src/utils/Auth.js"],"sourcesContent":["// class Auth {\n//     constructor(options) {\n//         this._baseUrl = options.baseUrl;\n//         this._headers = options.headers;\n//     }\n//     _checkServerStatus(res) {\n//         if (res.ok) {\n//             return res.json()\n//         }else {\n//             return Promise.reject(`Ошибка: ${res.status}`);\n//         }\n//     }\n//     registration(password, email) {\n//         return fetch(`${this._baseUrl}/signup`, {\n//             method: \"POST\",\n//             headers: this._headers,\n//             body: JSON.stringify({\n//                 password: password,\n//                 email: email,\n//             })\n//         }).then(this._checkServerStatus)\n//     }\n//     authorization(password, email) {\n//         return fetch(`${this._baseUrl}/signin`, {\n//             method: \"POST\",\n//             headers: this._headers,\n//             body: JSON.stringify({\n//                 password,\n//                 email\n//             })\n//         }).then(this._checkServerStatus)\n//     }\n//     checkTokenValidity(token) {\n//         return fetch(`${this._baseUrl}/users/me`, {\n//             method: \"GET\",\n//             headers: {\n//                 ...this._headers, Authorization: `Bearer ${token}`\n//             }\n//         }).then(this._checkServerStatus)\n//     }\n// }\n\n// export const auth = new Auth({\n//     baseUrl: 'https://auth.nomoreparties.co',\n//     headers: {\n//         \"Content-Type\": \"application/json\"\n//     }\n// })\nexport const BASE_URL = 'https://auth.nomoreparties.co';\n\nconst checkResponse = (res) => {\n  return res.ok ? res.json() : Promise.reject(`Ошибка: ${res.status}`);\n};\n\nexport const registration = (password, email) => {\n  return fetch(`${BASE_URL}/signup`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({\n      password: password,\n      email: email,\n    }),\n  }).then(checkResponse);\n};\n\nexport const authorization = (email, password) => {\n  return fetch(`${BASE_URL}/signin`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({\n      email: email,\n      password: password,\n    }),\n  }).then(checkResponse);\n};\n\nexport const checkTokenValidity = (token) => {\n  return fetch(`${BASE_URL}/users/me`, {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${token}`,\n    },\n  }).then(checkResponse);\n};"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMA,QAAQ,GAAG,+BAAjB;;AAEP,MAAMC,aAAa,GAAIC,GAAD,IAAS;EAC7B,OAAOA,GAAG,CAACC,EAAJ,GAASD,GAAG,CAACE,IAAJ,EAAT,GAAsBC,OAAO,CAACC,MAAR,CAAgB,WAAUJ,GAAG,CAACK,MAAO,EAArC,CAA7B;AACD,CAFD;;AAIA,OAAO,MAAMC,YAAY,GAAG,CAACC,QAAD,EAAWC,KAAX,KAAqB;EAC/C,OAAOC,KAAK,CAAE,GAAEX,QAAS,SAAb,EAAuB;IACjCY,MAAM,EAAE,MADyB;IAEjCC,OAAO,EAAE;MACP,gBAAgB;IADT,CAFwB;IAKjCC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;MACnBP,QAAQ,EAAEA,QADS;MAEnBC,KAAK,EAAEA;IAFY,CAAf;EAL2B,CAAvB,CAAL,CASJO,IATI,CASChB,aATD,CAAP;AAUD,CAXM;AAaP,OAAO,MAAMiB,aAAa,GAAG,CAACR,KAAD,EAAQD,QAAR,KAAqB;EAChD,OAAOE,KAAK,CAAE,GAAEX,QAAS,SAAb,EAAuB;IACjCY,MAAM,EAAE,MADyB;IAEjCC,OAAO,EAAE;MACP,gBAAgB;IADT,CAFwB;IAKjCC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;MACnBN,KAAK,EAAEA,KADY;MAEnBD,QAAQ,EAAEA;IAFS,CAAf;EAL2B,CAAvB,CAAL,CASJQ,IATI,CASChB,aATD,CAAP;AAUD,CAXM;AAaP,OAAO,MAAMkB,kBAAkB,GAAIC,KAAD,IAAW;EAC3C,OAAOT,KAAK,CAAE,GAAEX,QAAS,WAAb,EAAyB;IACnCY,MAAM,EAAE,KAD2B;IAEnCC,OAAO,EAAE;MACP,gBAAgB,kBADT;MAEPQ,aAAa,EAAG,UAASD,KAAM;IAFxB;EAF0B,CAAzB,CAAL,CAMJH,IANI,CAMChB,aAND,CAAP;AAOD,CARM"},"metadata":{},"sourceType":"module"}